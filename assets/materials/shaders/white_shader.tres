[gd_resource type="Shader" format=2]

[resource]
code = "shader_type canvas_item;

uniform float width : hint_range(0.0, 30.0);
uniform vec4 solid_color : hint_color;

void fragment() {
	float size = width * 1.0 / float(textureSize(TEXTURE, 0).x);
	vec4 texture_color = texture(TEXTURE, UV);
	float alpha = -8.0 * texture_color.a;
	alpha += texture(TEXTURE, UV + vec2(size, 0.0)).a;
	alpha += texture(TEXTURE, UV + vec2(-size, 0.0)).a;
	alpha += texture(TEXTURE, UV + vec2(0.0, size)).a;
	alpha += texture(TEXTURE, UV + vec2(0.0, -size)).a;
	alpha += texture(TEXTURE, UV + vec2(size, size)).a;
	alpha += texture(TEXTURE, UV + vec2(size, -size)).a;
	alpha += texture(TEXTURE, UV + vec2(-size, size)).a;
	alpha += texture(TEXTURE, UV + vec2(-size, -size)).a;
	
	COLOR = vec4(solid_color.rgb, clamp(abs(alpha) + texture_color.a, 0.0, 1.0));
}"
